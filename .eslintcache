[{"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js":"1","/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js":"2","/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js":"3","/Users/anapoletano/Flatiron/code/Mod5/findex/src/NavBar.js":"4","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js":"5","/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js":"6","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js":"7","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js":"8","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js":"9","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js":"10","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js":"11","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js":"12","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js":"13","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js":"14","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js":"15","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js":"16","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js":"17","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js":"18","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js":"19","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js":"20","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js":"21"},{"size":587,"mtime":1612380312485,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1612378419870,"results":"24","hashOfConfig":"23"},{"size":404,"mtime":1612904996690,"results":"25","hashOfConfig":"23"},{"size":1086,"mtime":1613045112835,"results":"26","hashOfConfig":"23"},{"size":116,"mtime":1612379400993,"results":"27","hashOfConfig":"23"},{"size":647,"mtime":1613081274480,"results":"28","hashOfConfig":"23"},{"size":696,"mtime":1612880419540,"results":"29","hashOfConfig":"23"},{"size":2167,"mtime":1612875073449,"results":"30","hashOfConfig":"23"},{"size":1114,"mtime":1612984801279,"results":"31","hashOfConfig":"23"},{"size":493,"mtime":1612979101007,"results":"32","hashOfConfig":"23"},{"size":578,"mtime":1612818899649,"results":"33","hashOfConfig":"23"},{"size":2268,"mtime":1612821177928,"results":"34","hashOfConfig":"23"},{"size":2413,"mtime":1612989896435,"results":"35","hashOfConfig":"23"},{"size":7474,"mtime":1612991425125,"results":"36","hashOfConfig":"23"},{"size":2679,"mtime":1613081274478,"results":"37","hashOfConfig":"23"},{"size":3553,"mtime":1612901769647,"results":"38","hashOfConfig":"23"},{"size":1689,"mtime":1612904517808,"results":"39","hashOfConfig":"23"},{"size":561,"mtime":1612905207248,"results":"40","hashOfConfig":"23"},{"size":4150,"mtime":1612985784855,"results":"41","hashOfConfig":"23"},{"size":1643,"mtime":1613081274479,"results":"42","hashOfConfig":"23"},{"size":804,"mtime":1613081274479,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"7dmnfc",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js",[],["94","95"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/NavBar.js",["96"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js",["97"],"import React, {useState} from 'react'\nimport Search from './Search'\nimport TransactionCard from './TransactionCard'\n\n\nfunction TransactionList({transactions, handleRemoveTransaction, categoriesList}){\n\n    const [selectedCategory, setSelectedCategory] = useState(\"all\")\n\n\n    // console.log(selectedCategory)\n\n    function handleChange(value){\n        setSelectedCategory(value)\n    }\n\n    const filteredTransactions = transactions.filter(transaction =>{\n        if (selectedCategory === \"all\"){\n            return transaction \n        }\n        return transaction.category_id == selectedCategory\n    })\n\n    const transactionsObj = filteredTransactions.map((transaction=> {\n        return <TransactionCard key={transaction.id} transaction={transaction} handleRemoveTransaction={handleRemoveTransaction}/>\n    }))\n\n    return( \n        <>\n        <div className=\"transaction-list-div\">\n            <h3>Transactions:</h3>\n            <Search categoriesList={categoriesList} handleChange={handleChange}/>\n            {transactionsObj}\n            \n\n        </div>\n        </>\n    )\n}\n\n\nexport default TransactionList","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js",["98"],"import React, { useState, useEffect } from 'react';\nimport {  Doughnut } from \"react-chartjs-2\";\n\n\n\nfunction MonthGraph({selectedMonthData}){\n    const [chartData, setChartData] = useState({})\n    \n    const categoryLabels = selectedMonthData.categories.map(data => data.name)\n    const categoryData = selectedMonthData.categories.map(data => data.budget)\n\n    function chart(){\n        setChartData({\n            labels: categoryLabels,\n            datasets: [\n                {\n                    data: categoryData,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                }\n            ]\n        })\n    }\n\n    useEffect(() => {\n        chart()\n    }, [selectedMonthData])\n\n    let chartOptions = {\n        responsive: true,\n        title: { text: \"Categories as a percentage of Budget\", \n                display:true, \n                fontSize: 30 \n        },    \n        legend: {\n            position: 'left',\n            labels: {\n                fontSize: 18,\n                padding: 12\n            }\n        },\n        cutoutPercentage: 40,\n        animation: {\n            animateRotate: false,\n            animateScale: true\n          }\n    \n        \n    }\n\n\n    return(\n        <div className=\"doughnut-chart\">\n            <Doughnut\n                data={chartData} \n                options={chartOptions} \n            />\n            \n        </div>\n    );\n}\n\n\nexport default MonthGraph","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js",["99","100"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js",["101","102"],"import React, {useState} from 'react'\n\n\nfunction CategoryCard({category, handleRemoveCategory, submitCategoryEdit}){\n    const [isEditClicked, setIsEditClicked] = useState(false)\n    const {name, budget, id} = category;\n    const [categoryName, setCategoryName] = useState(name)\n    const [budgetValue, setBudgetValue] = useState(budget)\n\n    // console.log(category)\n\n    const totalSpent = category.transactions.map(transaction => {\n        return transaction.amount\n    }).reduce(( accumulator, currentValue ) => accumulator + currentValue,\n        0\n      ).toFixed(2)\n\n    // console.log(isEditClicked)\n    const categoryDataObj = (\n        <>\n            <h3>{name}</h3>\n            <h5>Budget: {budget}</h5>\n            <h5>Total Spent: {totalSpent}</h5>\n            <button\n                className=\"delete-category-btn\" \n                data-id={id}\n                onClick={() => handleRemoveCategory(id)}\n            >🗑</button>\n            <button\n                className=\"edit-category-btn\" \n                data-id={id}\n                onClick={() => setIsEditClicked(!isEditClicked)}            \n            >✏️</button>\n            </>\n    )\n\n    //handle new category form submit\n    function handleSubmit(e){\n        e.preventDefault()\n        \n        submitCategoryEdit({\n            id: id,\n            name: categoryName,\n            budget: parseInt(budgetValue)\n        })\n\n        setIsEditClicked(!isEditClicked)\n\n    }\n\n    // edit category form\n    const categoryEditForm = (\n\n        <form className=\"edit-category-form\" onSubmit={handleSubmit}>\n            <label> Name:</label>\n            <input\n                name=\"name\"\n                value={categoryName}\n                onChange={(e) => setCategoryName(e.target.value)}\n            />\n            <label> Budget:</label>\n            <input \n                name=\"budget\"\n                value = {budgetValue}\n                onChange={(e) => setBudgetValue(e.target.value)}\n            />\n\n            <button \n                type=\"submit\">\n                    submit\n            </button>\n        </form>\n    )\n\n    return( \n        <>\n        {!isEditClicked ? \n            <div className=\"category-card-div\">\n                {categoryDataObj}\n            </div> : \n            <div className=\"category-card-div\">\n                {categoryEditForm}\n            </div> }\n        </>\n    )\n}\n\n\nexport default CategoryCard","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js",["103"],"import React, {useEffect, useState} from \"react\"\nimport { Bar } from 'react-chartjs-2';\n\n\nfunction MonthComparisonChart({allMonths}){\n    const [chartData, setChartData] = useState({})\n\n    console.log(allMonths)\n\n\n    const monthlyBudget = allMonths.map(month=> {\n        return month.categories.map(category => (category.budget))\n        .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    })\n    \n    console.log(\"budget\",monthlyBudget)\n\n    const monthlyActuals = allMonths.map(month=> {\n        return month.transactions.map(transaction => transaction.amount)\n        .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    })\n\n    console.log(\"Actuals\", monthlyActuals)\n    \n    const monthNames = allMonths.map(month=> month.name)\n\n    console.log(monthNames)\n\n\n    //chart\n\n\n    function chart(){\n        setChartData({\n            labels: monthNames,\n            datasets: [\n                {\n                    data: monthlyActuals,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n  \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"actuals\"\n                },\n                {\n                    data: monthlyBudget,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#0f52ba\", \"#0f52ba\", \"#0f52ba\", \"#0f52ba\"],//,\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#0f52ba\"],//,\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n             \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"budget\"\n                }\n            ]\n        })\n    }\n\n    //scales stacks the chart, if I wanted bar graph made up of different categories\n    let chartOptions = {\n        // scales: {\n        //     xAxes: [{\n        //         stacked: true\n        //     }],\n        //     yAxes: [{\n        //         stacked: true\n        //     }]\n        // }\n    }\n\n\n\n    useEffect(() => {\n        chart()\n    }, [])\n\n\n\n\n    return( \n        <>\n        <h3>MonthComparisonChart</h3>\n        <div className=\"monthly-comparison-chart-div\">\n            <Bar\n                data={chartData}\n                options={chartOptions}\n            />\n        </div>\n\n        </>\n    )\n}\n\n\nexport default MonthComparisonChart;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js",["104"],"import {createContext, useState} from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n//global state: loggedIn?\n\n//create context obj\nconst LoginContext = createContext();\n\n//context provider component\nfunction LoginProvider({children}){\n    const [loggedIn, setLoggedIn] = useState(false)\n\n\n    function toggle(){\n        setLoggedIn(loggedIn => !loggedIn)\n    }\n\n\n    const value = {loggedIn: loggedIn, toggle: toggle}\n\n    return (\n        <LoginContext.Provider value={value}>{children}</LoginContext.Provider>\n    );\n}\n\nexport {LoginContext, LoginProvider};\n ","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js",["105"],"import React from \"react\"\nimport ReactDOM from 'react-dom'\n// import { \n//     VictoryBar, \n//     VictoryChart, \n//     VictoryGroup, \n//     VictoryLegend } from 'victory';\n\nfunction Home(){\n\n\n    \n\n\n    // const data = [\n    //     {quarter: 1, budget: 13000},\n     \n    //   ];\n\n    // const data2 = [\n    //     {quarter: 1, expense: 20000},\n     \n    //   ];\n\n\n\n\n\n    return(\n        <div>\n        <h1> this is Home</h1>\n\n        <div className=\"progress-bar\">\n            <div className=\"progress-filler\" style={{width: \"50%\"}}>\n\n            </div>\n\n        </div>\n\n\n\n\n\n\n\n\n{/*         \n        <VictoryChart\n            domainPadding={20}\n            // theme={VictoryTheme.greyscale}\n            >\n            <VictoryLegend x={125} y={50}\n                gutter={30}\n                style={{ border: { stroke: \"black\" }, title: {fontSize: 20 } }}\n                orientation=\"horizontal\"\n\n                data={[\n                    { name: \"Budget\" }, { name: \"Total Expenses\" }\n                  ]}\n                />\n            <VictoryGroup\n            offset={10}\n            >            \n\n                <VictoryBar \n                     color='#0080ff'\n                    animate={{ duration: 1000 }}\n                    data={data}\n                    x=\"quarter\"\n                    y=\"budget\"\n                    />\n                 <VictoryBar\n                    animate={{ duration: 1000 }}\n                    data={data2}\n                    x=\"quarter\"\n                    y=\"expense\"\n                    />\n                </VictoryGroup> \n        </VictoryChart> */}\n\n        </div>\n    )\n}\n\nexport default Home;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js",["106"],"import React from \"react\"\n\n\nfunction ProgressBar({budget, totalSpent}){\n\n\nconst percentage = (totalSpent/budget)*100\n\nconsole.log(percentage)\n// let percentage=\"50%\"\n\nlet scaledPercentage\nlet progressBarColor\nif (percentage >= 100){\n     scaledPercentage = 100\n     progressBarColor = \"red\"\n} else if(percentage==0){\n    progressBarColor = \"rgb(165, 164, 187)\"\n\n}\n\n\nelse {\n    scaledPercentage = percentage\n    progressBarColor = \"green\"\n\n}\n\n\nconst myStyle ={\n    width: `${scaledPercentage}%`,\n    background: progressBarColor,\n    zIndex: 3,\n    // background: \"green\"\n\n}\n\n\n\nreturn(\n        <div className=\"progress-bar\" >\n                <div \n                    className=\"progress-filler\" \n                    style={myStyle}>\n\n                </div>\n\n        </div>\n)\n}\n\nexport default ProgressBar",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":1,"column":28,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":21,"column":40,"nodeType":"117","messageId":"118","endLine":21,"endColumn":42},{"ruleId":"119","severity":1,"message":"120","line":41,"column":8,"nodeType":"121","endLine":41,"endColumn":27,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"116","line":60,"column":63,"nodeType":"117","messageId":"118","endLine":60,"endColumn":65},{"ruleId":"115","severity":1,"message":"116","line":158,"column":75,"nodeType":"117","messageId":"118","endLine":158,"endColumn":77},{"ruleId":"111","severity":1,"message":"123","line":18,"column":13,"nodeType":"113","messageId":"114","endLine":18,"endColumn":18},{"ruleId":"111","severity":1,"message":"124","line":22,"column":13,"nodeType":"113","messageId":"114","endLine":22,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":95,"column":8,"nodeType":"121","endLine":95,"endColumn":10,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"126","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"126","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"115","severity":1,"message":"116","line":17,"column":21,"nodeType":"117","messageId":"118","endLine":17,"endColumn":23},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'data1' is assigned a value but never used.","'data2' is assigned a value but never used.",["130"],"'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [chart, selectedMonthData]",{"range":"135","text":"136"},"Update the dependencies array to be: [chart]",{"range":"137","text":"138"},[1524,1543],"[chart, selectedMonthData]",[3250,3252],"[chart]"]