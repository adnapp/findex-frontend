[{"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js":"1","/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js":"2","/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js":"3","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js":"4","/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js":"5","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js":"6","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js":"7","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js":"8","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js":"9","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js":"10","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js":"11","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js":"12","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js":"13","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js":"14","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js":"15","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js":"16","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js":"17","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js":"18","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js":"19","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js":"20","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js":"21","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js":"22","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js":"23","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js":"24","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js":"25","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBarData.js":"26"},{"size":587,"mtime":1612380312485,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1612378419870,"results":"29","hashOfConfig":"28"},{"size":422,"mtime":1613419342668,"results":"30","hashOfConfig":"28"},{"size":116,"mtime":1612379400993,"results":"31","hashOfConfig":"28"},{"size":824,"mtime":1613405654141,"results":"32","hashOfConfig":"28"},{"size":696,"mtime":1612880419540,"results":"33","hashOfConfig":"28"},{"size":2398,"mtime":1613456097661,"results":"34","hashOfConfig":"28"},{"size":1142,"mtime":1613455994904,"results":"35","hashOfConfig":"28"},{"size":493,"mtime":1612979101007,"results":"36","hashOfConfig":"28"},{"size":764,"mtime":1613456457790,"results":"37","hashOfConfig":"28"},{"size":2341,"mtime":1613448757892,"results":"38","hashOfConfig":"28"},{"size":2601,"mtime":1613454664025,"results":"39","hashOfConfig":"28"},{"size":9368,"mtime":1613455809437,"results":"40","hashOfConfig":"28"},{"size":3320,"mtime":1613455637898,"results":"41","hashOfConfig":"28"},{"size":3565,"mtime":1613405654141,"results":"42","hashOfConfig":"28"},{"size":2952,"mtime":1613453285009,"results":"43","hashOfConfig":"28"},{"size":561,"mtime":1612905207248,"results":"44","hashOfConfig":"28"},{"size":4150,"mtime":1612985784855,"results":"45","hashOfConfig":"28"},{"size":1499,"mtime":1613405654137,"results":"46","hashOfConfig":"28"},{"size":798,"mtime":1613453926483,"results":"47","hashOfConfig":"28"},{"size":2113,"mtime":1613405654139,"results":"48","hashOfConfig":"28"},{"size":1140,"mtime":1613405654137,"results":"49","hashOfConfig":"28"},{"size":1114,"mtime":1613405654138,"results":"50","hashOfConfig":"28"},{"size":2339,"mtime":1613405654139,"results":"51","hashOfConfig":"28"},{"size":3081,"mtime":1613448757895,"results":"52","hashOfConfig":"28"},{"size":714,"mtime":1613448757896,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"7dmnfc",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js",[],["114","115"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js",["116"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js",["117"],"import React, { useState, useEffect } from 'react';\nimport {  Doughnut } from \"react-chartjs-2\";\n\n\n\nfunction MonthGraph({selectedMonthData}){\n    const [chartData, setChartData] = useState({})\n    \n    const categoryLabels = selectedMonthData.categories.map(data => data.name)\n    const categoryData = selectedMonthData.categories.map(data => data.budget)\n\n    function chart(){\n        setChartData({\n            labels: categoryLabels,\n            datasets: [\n                {\n                    data: categoryData,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                }\n            ]\n        })\n    }\n\n    useEffect(() => {\n        chart()\n    }, [selectedMonthData])\n\n    let chartOptions = {\n        responsive: true,\n        title: { text: \"Budget Broken Down into Categories\", \n                display:true, \n                fontSize: 30 \n        },    \n        legend: {\n            position: 'left',\n            labels: {\n                fontSize: 18,\n                padding: 12\n            }\n        },\n        cutoutPercentage: 40,\n        animation: {\n            animateRotate: false,\n            animateScale: true\n          }\n    \n        \n    }\n\n\n    return(\n        <div className=\"doughnut-chart\">\n            <Doughnut\n                data={chartData} \n                options={chartOptions} \n            />\n            \n        </div>\n    );\n}\n\n\nexport default MonthGraph","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js",["118","119","120"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js",["121","122"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js",["123"],"import React, {useEffect, useState} from \"react\"\nimport { Bar } from 'react-chartjs-2';\n\n\nfunction MonthComparisonChart({allMonths}){\n    const [chartData, setChartData] = useState({})\n\n    // console.log(allMonths)\n\n\n    const monthlyBudget = allMonths.map(month=> {\n        return month.categories.map(category => (category.budget))\n        .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    })\n    \n    // console.log(\"budget\",monthlyBudget)\n\n    const monthlyActuals = allMonths.map(month=> {\n        return month.transactions.map(transaction => transaction.amount)\n        .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    })\n\n    // console.log(\"Actuals\", monthlyActuals)\n    \n    const monthNames = allMonths.map(month=> month.name)\n\n    // console.log(monthNames)\n\n\n    //chart\n\n\n    function chart(){\n        setChartData({\n            labels: monthNames,\n            datasets: [\n                {\n                    data: monthlyActuals,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n  \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"actuals\"\n                },\n                {\n                    data: monthlyBudget,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#0f52ba\", \"#0f52ba\", \"#0f52ba\", \"#0f52ba\"],//,\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#0f52ba\"],//,\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n             \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"budget\"\n                }\n            ]\n        })\n    }\n\n    //scales stacks the chart, if I wanted bar graph made up of different categories\n    let chartOptions = {\n        // scales: {\n        //     xAxes: [{\n        //         stacked: true\n        //     }],\n        //     yAxes: [{\n        //         stacked: true\n        //     }]\n        // }\n    }\n\n\n\n    useEffect(() => {\n        chart()\n    }, [])\n\n\n\n\n    return( \n        <>\n        <h3>MonthComparisonChart</h3>\n        <div className=\"monthly-comparison-chart-div\">\n            <Bar\n                data={chartData}\n                options={chartOptions}\n            />\n        </div>\n\n        </>\n    )\n}\n\n\nexport default MonthComparisonChart;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js",["124","125"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js",["126"],"import {createContext, useState} from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n//global state: loggedIn?\n\n//create context obj\nconst LoginContext = createContext();\n\n//context provider component\nfunction LoginProvider({children}){\n    const [loggedIn, setLoggedIn] = useState(false)\n\n\n    function toggle(){\n        setLoggedIn(loggedIn => !loggedIn)\n    }\n\n\n    const value = {loggedIn: loggedIn, toggle: toggle}\n\n    return (\n        <LoginContext.Provider value={value}>{children}</LoginContext.Provider>\n    );\n}\n\nexport {LoginContext, LoginProvider};\n ","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js",["127"],"import React from \"react\"\nimport ReactDOM from 'react-dom'\n// import { \n//     VictoryBar, \n//     VictoryChart, \n//     VictoryGroup, \n//     VictoryLegend } from 'victory';\n\nfunction Home(){\n\n\n    \n\n\n    // const data = [\n    //     {quarter: 1, budget: 13000},\n     \n    //   ];\n\n    // const data2 = [\n    //     {quarter: 1, expense: 20000},\n     \n    //   ];\n\n\n\n\n\n    return(\n        <div>\n        <h1> this is Home</h1>\n\n\n\n\n\n\n\n\n\n{/*         \n        <VictoryChart\n            domainPadding={20}\n            // theme={VictoryTheme.greyscale}\n            >\n            <VictoryLegend x={125} y={50}\n                gutter={30}\n                style={{ border: { stroke: \"black\" }, title: {fontSize: 20 } }}\n                orientation=\"horizontal\"\n\n                data={[\n                    { name: \"Budget\" }, { name: \"Total Expenses\" }\n                  ]}\n                />\n            <VictoryGroup\n            offset={10}\n            >            \n\n                <VictoryBar \n                     color='#0080ff'\n                    animate={{ duration: 1000 }}\n                    data={data}\n                    x=\"quarter\"\n                    y=\"budget\"\n                    />\n                 <VictoryBar\n                    animate={{ duration: 1000 }}\n                    data={data2}\n                    x=\"quarter\"\n                    y=\"expense\"\n                    />\n                </VictoryGroup> \n        </VictoryChart> */}\n\n        </div>\n    )\n}\n\nexport default Home;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js",["128","129"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js",["130","131","132","133","134"],"import React, {useEffect, useState, useMemo} from \"react\"\nimport ReactDOM from 'react-dom'\nimport CoinCard from \"./CoinCard\"\nimport styled from \"styled-components\";\nimport useColumns from \"./Columns\";\nimport CryptoTable from \"./CryptoTable\";\n\n\nfunction InvestmentMain(){\n\n    const [allCoins, setAllCoins] = useState({})\n    const [coinIndex, setCoinIndex] = useState(0)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [pageIndex, setPageIndex] = useState(0)\n    const columns = useColumns();\n\n    console.log(columns)\n\n    //pull api data every xx amt of time\n    useEffect(() => {\n        apiCall()\n        const id = setInterval(apiCall, 100000);\n        return () => clearInterval(id);\n        }, [])\n\n    const apiCall = () => {\n        fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd`)\n        .then(response => response.json())\n        .then(data => {\n            setAllCoins(data)\n            setIsLoaded(true)})\n    }\n    \n    if (!isLoaded) return <h2>Loading...</h2>;\n\n    \n    const selectedCoins = allCoins.slice(coinIndex, coinIndex+10)\n    \n    console.log(selectedCoins)\n\n\n    // const coinCardObj = selectedCoins.map((coin, index)=>{\n    //     return <CoinCard key={coin.current_price} coin={coin} order={pageIndex*10+index+1}/>\n    // })\n\n    function pageForward(){\n        setCoinIndex(coinIndex+10);\n         setPageIndex(pageIndex+1)\n    }\n\n    function pageBackward(){\n        setCoinIndex(coinIndex-10);\n         setPageIndex(pageIndex-1)\n    }\n\n    console.log(pageIndex)\n\n    return(\n        <>\n        <div className=\"crypto-cards-div\">\n            <h1>investment page</h1>\n            {/* {coinCardObj} */}\n            <CryptoTable selectedCoins={selectedCoins}/>\n        </div>\n        {pageIndex==0 ? null : <button onClick={() => pageBackward()}>Previous Page</button>}\n        {pageIndex==9? null : <button onClick={() => pageForward()}>Next Page</button>}\n       \n        <BottomDiv>**Data updated every 5 minutes</BottomDiv>\n        </>\n    )\n}\n\nexport default InvestmentMain;\n\nconst BottomDiv = styled.div`\nheight:25px;\npadding: 20px 0;\n\n`\n\n","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js",["135"],"import React from \"react\";\nimport { useSortBy, useTable } from \"react-table\";\nimport useColumns from \"./Columns\";\nimport \"./Table.css\";\nimport { FaCaretSquareUp, FaCaretSquareDown } from \"react-icons/fa\";\n\nfunction CryptoTable({selectedCoins}){\n    const columns = useColumns();\n    const data= selectedCoins\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n      } = useTable({ columns, data }, useSortBy);\n\n      function doNothing(e){\n      console.log(e.target)\n      }\n\n    return( \n        <div className=\"container\">\n            <table {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                {column.render(\"Header\")}\n                                <span>\n                                    {column.isSorted ? (\n                                    column.isSortedDesc ? (\n                                        <FaCaretSquareDown />\n                                    ) : (\n                                        <FaCaretSquareUp />\n                                    )\n                                    ) : (\n                                    \"\"\n                                    )}\n                                </span>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        console.log(row)\n                        return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                            return (\n                                <td {...cell.getCellProps()} >{cell.render(\"Cell\")}</td>\n                            );\n                            })}\n                        </tr>\n                        );\n                    })}\n                    </tbody>\n                </table>\n                </div>\n            );\n    \n}\n\n\nexport default CryptoTable","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js",["136","137","138"],"import React, {useContext, useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport { LoginContext } from \"../../Login\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport {NavBarData} from './NavBarData';\nimport './NavBar.css';\nimport {IconContext} from 'react-icons';\n// import topOfPageLogo from '..../Images/topOfPageLogo.png';\n// src/Images/topOfPageLogo.png\n// src/Components/NavBar/NavBar.js\n\nfunction NavBar(){\n    const {loggedIn, toggle} = useContext(LoginContext)\n    const history = useHistory()\n    const [navBar, setNavBar] = useState(false)\n\n    const showNavBar = () => setNavBar(!navBar);\n    // console.log(topOfPageLogo)\n    return (\n        <>\n        <IconContext.Provider value={{color:'fff'}}>\n            <div className=\"navBar\">\n                <Link to=\"#\" className='menu-bars'>\n                    <FaIcons.FaBars onClick={showNavBar}/> \n                </Link>\n                <h3 className=\"top-title\">Findex</h3>\n                {/* <img src={logo} alt=\"top image\"/> */}\n            </div>\n            <nav className={navBar ? \"nav-menu active\" : \"nav-menu\"}>\n                <ul className='nav-menu-items' onClick={showNavBar}>\n                    <li className=\"navBar-toggle\">\n                        <Link to='#' className='menu-bars'>\n                            <AiIcons.AiOutlineClose />\n                        </Link>\n                    </li>\n                    {NavBarData.map((item, index) => {\n                        return (\n                            <li key={index} className={item.cName}>\n                                <Link to={item.path}>\n                                    {item.icon}\n                                    <span>{item.title}</span>\n                                </Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n           \n            </nav>\n        </IconContext.Provider>\n\n        </>\n    )\n\n\n    // const headerLinksObj = () => {\n    //    return(\n    //    <>\n    //     <li>\n    //         <NavLink exact to=\"/budget\">\n    //             <strong>BUDGETS</strong>\n    //         </NavLink>\n    //     </li>\n    //     <li>\n    //         <NavLink exact to=\"/profile\">\n    //             <strong>PROFILE</strong>\n    //         </NavLink>\n    //     </li>\n    //     <li>\n    //         <NavLink exact to=\"/investments\">\n    //             <strong>INVESTMENTS</strong>\n    //         </NavLink>\n    //     </li>\n    //     </>)\n    // }\n\n    // return(\n    //     <nav className=\"nav-bar\"> \n    //     <ul>\n    //         <li>\n    //             <NavLink exact to=\"/\">\n    //                 <strong>HOME</strong>\n    //             </NavLink>\n    //         </li>\n            \n    //         {loggedIn ? headerLinksObj() : history.push(`/`)}         \n\n    //         <li className=\"login\" onClick={toggle}>\n    //             {loggedIn ? \"LOGOUT\" : \"LOGIN\"}\n    //         </li>\n            \n    //     </ul>\n        \n    //     </nav>\n    // )\n}\n\nexport default NavBar;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBarData.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":22,"column":40,"nodeType":"145","messageId":"146","endLine":22,"endColumn":42},{"ruleId":"147","severity":1,"message":"148","line":41,"column":8,"nodeType":"149","endLine":41,"endColumn":27,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"144","line":59,"column":63,"nodeType":"145","messageId":"146","endLine":59,"endColumn":65},{"ruleId":"151","severity":1,"message":"152","line":138,"column":5,"nodeType":"153","messageId":"154","endLine":141,"endColumn":29},{"ruleId":"143","severity":1,"message":"144","line":183,"column":83,"nodeType":"145","messageId":"146","endLine":183,"endColumn":85},{"ruleId":"155","severity":1,"message":"156","line":20,"column":13,"nodeType":"157","messageId":"158","endLine":20,"endColumn":18},{"ruleId":"155","severity":1,"message":"159","line":24,"column":13,"nodeType":"157","messageId":"158","endLine":24,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":95,"column":8,"nodeType":"149","endLine":95,"endColumn":10,"suggestions":"160"},{"ruleId":"155","severity":1,"message":"161","line":1,"column":26,"nodeType":"157","messageId":"158","endLine":1,"endColumn":32},{"ruleId":"155","severity":1,"message":"162","line":1,"column":34,"nodeType":"157","messageId":"158","endLine":1,"endColumn":45},{"ruleId":"155","severity":1,"message":"163","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":16},{"ruleId":"155","severity":1,"message":"163","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":13,"column":21,"nodeType":"145","messageId":"146","endLine":13,"endColumn":23},{"ruleId":"143","severity":1,"message":"144","line":15,"column":20,"nodeType":"145","messageId":"146","endLine":15,"endColumn":22},{"ruleId":"155","severity":1,"message":"164","line":1,"column":37,"nodeType":"157","messageId":"158","endLine":1,"endColumn":44},{"ruleId":"155","severity":1,"message":"163","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":16},{"ruleId":"155","severity":1,"message":"165","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":65,"column":19,"nodeType":"145","messageId":"146","endLine":65,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":66,"column":19,"nodeType":"145","messageId":"146","endLine":66,"endColumn":21},{"ruleId":"155","severity":1,"message":"166","line":19,"column":16,"nodeType":"157","messageId":"158","endLine":19,"endColumn":25},{"ruleId":"155","severity":1,"message":"167","line":14,"column":12,"nodeType":"157","messageId":"158","endLine":14,"endColumn":20},{"ruleId":"155","severity":1,"message":"168","line":14,"column":22,"nodeType":"157","messageId":"158","endLine":14,"endColumn":28},{"ruleId":"155","severity":1,"message":"169","line":15,"column":11,"nodeType":"157","messageId":"158","endLine":15,"endColumn":18},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["172"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'data1' is assigned a value but never used.","Identifier","unusedVar","'data2' is assigned a value but never used.",["173"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","'ReactDOM' is defined but never used.","'useMemo' is defined but never used.","'CoinCard' is defined but never used.","'doNothing' is defined but never used.","'loggedIn' is assigned a value but never used.","'toggle' is assigned a value but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [chart, selectedMonthData]",{"range":"178","text":"179"},"Update the dependencies array to be: [chart]",{"range":"180","text":"181"},[1524,1543],"[chart, selectedMonthData]",[3262,3264],"[chart]"]