[{"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js":"1","/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js":"2","/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js":"3","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js":"4","/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js":"5","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js":"6","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js":"7","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js":"8","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js":"9","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js":"10","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js":"11","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js":"12","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js":"13","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js":"14","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js":"15","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js":"16","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js":"17","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js":"18","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js":"19","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js":"20","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js":"21","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js":"22","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js":"23","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js":"24","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js":"25","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBarData.js":"26","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentDetail.js":"27"},{"size":587,"mtime":1612380312485,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1612378419870,"results":"30","hashOfConfig":"29"},{"size":420,"mtime":1613588781680,"results":"31","hashOfConfig":"29"},{"size":672,"mtime":1613588858691,"results":"32","hashOfConfig":"29"},{"size":1042,"mtime":1615409676582,"results":"33","hashOfConfig":"29"},{"size":2321,"mtime":1613706300297,"results":"34","hashOfConfig":"29"},{"size":2463,"mtime":1613667171720,"results":"35","hashOfConfig":"29"},{"size":1161,"mtime":1615903574006,"results":"36","hashOfConfig":"29"},{"size":464,"mtime":1613702991789,"results":"37","hashOfConfig":"29"},{"size":872,"mtime":1613586491570,"results":"38","hashOfConfig":"29"},{"size":2341,"mtime":1613448757892,"results":"39","hashOfConfig":"29"},{"size":3051,"mtime":1613702755517,"results":"40","hashOfConfig":"29"},{"size":10579,"mtime":1615903608836,"results":"41","hashOfConfig":"29"},{"size":3338,"mtime":1615903675237,"results":"42","hashOfConfig":"29"},{"size":4277,"mtime":1613591963873,"results":"43","hashOfConfig":"29"},{"size":2929,"mtime":1615903646428,"results":"44","hashOfConfig":"29"},{"size":564,"mtime":1613595174787,"results":"45","hashOfConfig":"29"},{"size":5863,"mtime":1613702410100,"results":"46","hashOfConfig":"29"},{"size":2647,"mtime":1615903892447,"results":"47","hashOfConfig":"29"},{"size":1192,"mtime":1615903839627,"results":"48","hashOfConfig":"29"},{"size":2521,"mtime":1615904182897,"results":"49","hashOfConfig":"29"},{"size":1274,"mtime":1615904228287,"results":"50","hashOfConfig":"29"},{"size":1326,"mtime":1615904280802,"results":"51","hashOfConfig":"29"},{"size":3325,"mtime":1615904133302,"results":"52","hashOfConfig":"29"},{"size":1950,"mtime":1615904256711,"results":"53","hashOfConfig":"29"},{"size":714,"mtime":1613448757896,"results":"54","hashOfConfig":"29"},{"size":857,"mtime":1615904033006,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"7dmnfc",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js",[],["115","116"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js",["117","118"],"import React, {useEffect, useState} from \"react\"\nimport MonthComparisonChart from \"./MonthComparisonChart\"\nimport styled from \"styled-components\";\n\n\nfunction Profile(){\n    const [allMonths, setAllMonths]= useState({})\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [userData, setUserData] = useState()\n\n    useEffect(()=> {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/users/11`)\n        .then(resp => resp.json())\n        .then(data => {\n            setUserData(data)\n            setAllMonths(data.MonthlyBudgets)\n            setIsLoaded(true)\n        })\n    }, [])\n\n    if (!isLoaded) return <h2>Loading...</h2>;\n\n    console.log(allMonths)\n\n    const monthsSimplified = allMonths.map(month=> {\n        let totalSpent\n        {month.transactions[0] ?\n             totalSpent = month.transactions.map(transaction => transaction.amount)\n             .reduce(( accumulator, currentValue ) => accumulator + currentValue,0).toFixed(2)\n        : totalSpent=0}\n        \n        return {\n            name: month.name,\n            budget: month.budget,\n            spent: totalSpent\n        }\n    }).filter(month => month.spent != 0 )\n\n    console.log(monthsSimplified)\n\n    \n    // let's make it so only mapping average/percent from months with transactions\n\n\n\n    let average =  monthsSimplified.map(month=>month.spent).reduce((a, b) => parseInt(a) + parseInt(b))/monthsSimplified.length;\n\n    let percentInBudget = monthsSimplified.map(month=> {\n        return (month.budget > month.spent ?  1 :  0)\n\n    }).reduce((a, b) => parseInt(a) + parseInt(b))/(monthsSimplified.length)*100\n\n    return( \n        <ProfilePageDiv>\n        <h2>{userData.name}'s Profile</h2>\n        <TextBoxDivs>Your average spend per month was ${average}</TextBoxDivs>\n        <TextBoxDivs>Your spending was within your income {percentInBudget.toFixed(1)}% of the time</TextBoxDivs>\n        {/* <p>additional info/ another chart</p> */}\n        <br/><br/>\n        <MonthComparisonChart allMonths={allMonths}/>\n        </ProfilePageDiv>\n    )\n}\n\nconst ProfilePageDiv = styled.div`\n    height: 90vh;\n    text-align:center;\n    display:flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n`\n\nconst TextBoxDivs = styled.div`\nmargin: 7px;\npadding: 7px;\nborder: 1px;\n`\n\n\nexport default Profile;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js",["119"],"import React, { useState, useEffect } from 'react';\nimport {  Doughnut } from \"react-chartjs-2\";\n\n\n\nfunction MonthGraph({selectedMonthData}){\n    const [chartData, setChartData] = useState({})\n    \n    const categoryLabels = selectedMonthData.categories.map(data => data.name)\n    const categoryData = selectedMonthData.categories.map(data => data.budget)\n\n    function chart(){\n        setChartData({\n            labels: categoryLabels,\n            datasets: [\n                {\n                    data: categoryData,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                }\n            ]\n        })\n    }\n\n    useEffect(() => {\n        chart()\n    }, [selectedMonthData])\n\n    let chartOptions = {\n        responsive: true,\n        title: { text: \"Budget Broken Down into Categories\", \n                display:true, \n                fontSize: 30 \n        },    \n        legend: {\n            position: 'left',\n            labels: {\n                fontSize: 18,\n                padding: 12\n            }\n        },\n        cutoutPercentage: 40,\n        animation: {\n            animateRotate: false,\n            animateScale: true\n          }\n    \n        \n    }\n\n\n    return(\n        <div className=\"doughnut-chart\">\n            <Doughnut\n                data={chartData} \n                options={chartOptions} \n            />\n            \n        </div>\n    );\n}\n\n\nexport default MonthGraph","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js",["120"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js",["121"],"import React, {useEffect, useState} from \"react\"\nimport { Bar } from 'react-chartjs-2';\nimport styled from \"styled-components\";\n\n\nfunction MonthComparisonChart({allMonths}){\n    const [chartData, setChartData] = useState({})\n\n\n    const allMonthsSorted = allMonths.sort((a, b) => a.id > b.id ? 1 : -1)\n\n    console.log(allMonthsSorted)\n    const monthlyBudget = allMonthsSorted.map(month=> month.budget)\n    //use below if want to sum up all category budgets\n    // const monthlyBudget = allMonthsSorted.map(month=> {\n    //     return month.categories.map(category => (category.budget))\n    //     .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    // })\n   \n    const monthlyActuals = allMonthsSorted.map(month=> {\n        return month.transactions.map(transaction => transaction.amount)\n        .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    })\n\n    \n    const monthNames = allMonths.map(month=> month.name)\n\n   \n    function chart(){\n        setChartData({\n            labels: monthNames,\n            datasets: [\n                {\n                    data: monthlyActuals,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#3cb371\",\"#3cb371\", \"#3cb371\", \"#3cb371\",\"#3cb371\",\"#3cb371\", \"#3cb371\", \"#3cb371\", \"#3cb371\", \"3cb371\"],\n                    borderColor: [\"#3cb371\"],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n  \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"Actual Spend ($)\"\n                },\n                {\n                    data: monthlyBudget,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#0f52ba\", \"#0f52ba\", \"#0f52ba\", \"#0f52ba\",\"#0f52ba\", \"#0f52ba\", \"#0f52ba\",\"#0f52ba\",\"#0f52ba\", \"#3cb371\", \"#0f52ba\", \"#0f52ba\", \"556b2f\"],\n                    borderColor: [\"#0f52ba\"],//,\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n             \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"Income ($)\"\n                }\n            ]\n        })\n    }\n\n    //scales stacks the chart, if I wanted bar graph made up of different categories\n    let chartOptions = {\n        responsive: true,\n        title: { text: \"Income vs. Actual Spending per Month\", \n                display:true, \n                fontSize: 38,\n                fontColor: \"#FFFFFF\"\n        },    \n        legend: {\n            position: 'left',\n            labels: {\n                fontSize: 18,\n                padding: 12,\n                fontColor: \"#FFFFFF\"\n            }\n        },\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero:true,\n                    fontColor: 'white'\n                },\n            }],\n          xAxes: [{\n                ticks: {\n                    fontColor: 'white'\n                },\n            }]\n        } ,\n        cutoutPercentage: 40,\n        animation: {\n            animateRotate: false,\n            animateScale: true\n          }\n    }\n\n    useEffect(() => {\n        chart()\n    }, [])\n\n\n    return( \n        <>\n        <BarChartDiv>\n            <Bar\n                data={chartData}\n                options={chartOptions}\n            />\n        </BarChartDiv>\n\n        </>\n    )\n}\n\nconst BarChartDiv = styled.div`\n    position: relative;\n    height:30vh; \n    width:60vw\n\n`\n\n\nexport default MonthComparisonChart;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js",["122"],"import React, {useRef, useEffect, useState} from 'react'\nimport styled from \"styled-components\";\n\n\n\n\nfunction CoinCard({coin, order}){\n    const [color, setColor] = useState(\"black\")\n    const prevPriceRef = useRef(coin.current_price)\n\n    //to change the price of the text upon price change-- current api pulls every 5 min\n    useEffect(() => {\n        // use the current value of the ref\n        const prevPrice = prevPriceRef.current;\n    \n        if (coin.current_price > prevPrice) {\n          setColor(\"green\");\n        } else if (coin.current_price < prevPrice) {\n          setColor(\"red\");\n        } else {\n          setColor(\"black\");\n        }\n        // set the new value of the ref (note: this doesn't trigger a re-render)\n        prevPriceRef.current = coin.current_price;\n      }, [coin.current_price]);\n\n    return(\n        <CoinCardDiv>\n            <h2>#{order}. {coin.name}</h2>\n            <img \n              src={coin.image} \n              alt=\"coin image\"\n              width=\"50\"\n              height=\"50\"></img>\n            <h3>{coin.symbol}</h3>\n            <p style={{color: color}}>${coin.current_price}</p>\n        </CoinCardDiv>\n    )\n}\n\n\nexport default CoinCard\n\n\nconst CoinCardDiv = styled.div`\nborder:1px #ccc solid;\nwidth: 50%;\nmargin: 0 auto;\n\n\n`\n","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBarData.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentDetail.js",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":27,"column":9,"nodeType":"130","messageId":"131","endLine":30,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":37,"column":36,"nodeType":"134","messageId":"135","endLine":37,"endColumn":38},{"ruleId":"136","severity":1,"message":"137","line":41,"column":8,"nodeType":"138","endLine":41,"endColumn":27,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"129","line":157,"column":5,"nodeType":"130","messageId":"131","endLine":160,"endColumn":29},{"ruleId":"136","severity":1,"message":"137","line":113,"column":8,"nodeType":"138","endLine":113,"endColumn":10,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":30,"column":13,"nodeType":"143","endLine":34,"endColumn":27},{"ruleId":"136","severity":1,"message":"144","line":17,"column":12,"nodeType":"138","endLine":17,"endColumn":14,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["148"],["149"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'apiCall'. Either include it or remove the dependency array.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [chart, selectedMonthData]",{"range":"157","text":"158"},"Update the dependencies array to be: [chart]",{"range":"159","text":"160"},"Update the dependencies array to be: [apiCall]",{"range":"161","text":"162"},[1524,1543],"[chart, selectedMonthData]",[3946,3948],"[chart]",[451,453],"[apiCall]"]