[{"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js":"1","/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js":"2","/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js":"3","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js":"4","/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js":"5","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js":"6","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js":"7","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js":"8","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js":"9","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js":"10","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js":"11","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js":"12","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js":"13","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js":"14","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js":"15","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js":"16","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js":"17","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js":"18","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js":"19","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js":"20","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js":"21","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js":"22","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js":"23","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js":"24","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js":"25","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBarData.js":"26"},{"size":587,"mtime":1612380312485,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1612378419870,"results":"29","hashOfConfig":"28"},{"size":420,"mtime":1613588781680,"results":"30","hashOfConfig":"28"},{"size":672,"mtime":1613588858691,"results":"31","hashOfConfig":"28"},{"size":861,"mtime":1613588338544,"results":"32","hashOfConfig":"28"},{"size":2294,"mtime":1613675343080,"results":"33","hashOfConfig":"28"},{"size":2463,"mtime":1613667171720,"results":"34","hashOfConfig":"28"},{"size":1093,"mtime":1613579836716,"results":"35","hashOfConfig":"28"},{"size":493,"mtime":1612979101007,"results":"36","hashOfConfig":"28"},{"size":872,"mtime":1613586491570,"results":"37","hashOfConfig":"28"},{"size":2341,"mtime":1613448757892,"results":"38","hashOfConfig":"28"},{"size":3051,"mtime":1613702755517,"results":"39","hashOfConfig":"28"},{"size":10461,"mtime":1613702463964,"results":"40","hashOfConfig":"28"},{"size":3320,"mtime":1613455637898,"results":"41","hashOfConfig":"28"},{"size":4277,"mtime":1613591963873,"results":"42","hashOfConfig":"28"},{"size":2950,"mtime":1613678783143,"results":"43","hashOfConfig":"28"},{"size":564,"mtime":1613595174787,"results":"44","hashOfConfig":"28"},{"size":5863,"mtime":1613702410100,"results":"45","hashOfConfig":"28"},{"size":1263,"mtime":1613701132803,"results":"46","hashOfConfig":"28"},{"size":1170,"mtime":1613654234444,"results":"47","hashOfConfig":"28"},{"size":2367,"mtime":1613595013495,"results":"48","hashOfConfig":"28"},{"size":1140,"mtime":1613405654137,"results":"49","hashOfConfig":"28"},{"size":1114,"mtime":1613405654138,"results":"50","hashOfConfig":"28"},{"size":2958,"mtime":1613508535380,"results":"51","hashOfConfig":"28"},{"size":3006,"mtime":1613595148666,"results":"52","hashOfConfig":"28"},{"size":714,"mtime":1613448757896,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"7dmnfc",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js",[],["117","118"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js",["119","120"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js",["121"],"import React, {useState} from 'react'\nimport Search from './Search'\nimport TransactionCard from './TransactionCard'\nimport \"./Transactions.css\"\n\n\nfunction TransactionList({transactions, handleRemoveTransaction, categoriesList}){\n\n    const [selectedCategory, setSelectedCategory] = useState(\"all\")\n\n\n    // console.log(selectedCategory)\n\n    function handleChange(value){\n        setSelectedCategory(value)\n    }\n\n    const filteredTransactions = transactions.filter(transaction =>{\n        if (selectedCategory === \"all\"){\n            return transaction \n        }\n        return transaction.category_id == selectedCategory\n    })\n\n    const transactionsObj = filteredTransactions.map((transaction=> {\n        return <TransactionCard key={transaction.id} transaction={transaction} handleRemoveTransaction={handleRemoveTransaction}/>\n    }))\n\n    return( \n        <>\n        <div className=\"transaction-list-div\">\n            <Search categoriesList={categoriesList} handleChange={handleChange}/>\n            {transactionsObj}\n        </div>\n        </>\n    )\n}\n\n\nexport default TransactionList","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js",["122"],"import React, { useState, useEffect } from 'react';\nimport {  Doughnut } from \"react-chartjs-2\";\n\n\n\nfunction MonthGraph({selectedMonthData}){\n    const [chartData, setChartData] = useState({})\n    \n    const categoryLabels = selectedMonthData.categories.map(data => data.name)\n    const categoryData = selectedMonthData.categories.map(data => data.budget)\n\n    function chart(){\n        setChartData({\n            labels: categoryLabels,\n            datasets: [\n                {\n                    data: categoryData,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                }\n            ]\n        })\n    }\n\n    useEffect(() => {\n        chart()\n    }, [selectedMonthData])\n\n    let chartOptions = {\n        responsive: true,\n        title: { text: \"Budget Broken Down into Categories\", \n                display:true, \n                fontSize: 30 \n        },    \n        legend: {\n            position: 'left',\n            labels: {\n                fontSize: 18,\n                padding: 12\n            }\n        },\n        cutoutPercentage: 40,\n        animation: {\n            animateRotate: false,\n            animateScale: true\n          }\n    \n        \n    }\n\n\n    return(\n        <div className=\"doughnut-chart\">\n            <Doughnut\n                data={chartData} \n                options={chartOptions} \n            />\n            \n        </div>\n    );\n}\n\n\nexport default MonthGraph","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js",["123","124"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js",["125","126"],"import React, {useState} from 'react'\nimport ProgressBar from './ProgressBar';\nimport styled from \"styled-components\";\nimport {AiFillDelete, AiFillEdit } from \"react-icons/ai\";\n\n\n\nfunction CategoryCard({category, handleRemoveCategory, submitCategoryEdit}){\n    const [isEditClicked, setIsEditClicked] = useState(false)\n    const {name, budget, id} = category;\n    const [categoryName, setCategoryName] = useState(name)\n    const [budgetValue, setBudgetValue] = useState(budget)\n\n    const totalSpent = category.transactions.map(transaction => {\n        return transaction.amount\n    }).reduce(( accumulator, currentValue ) => accumulator + currentValue,\n        0\n      ).toFixed(2)\n\n      const data1 = [\n          {spending: 1, spent: totalSpent}\n      ]\n\n      const data2 = [\n        {\"budgeted\": 1, spent: budget}\n    ]\n\n    const categoryDataObj = (\n        <>\n        \n            <h3>{name}</h3>\n            <ProgressBar budget={budget} totalSpent={totalSpent}/>\n            <h5>Budget: ${budget}</h5>\n            <h5>Total Spent: ${totalSpent}</h5>\n            \n            <DeleteCategoryButton data-id={id} onClick={() => handleRemoveCategory(id)}/>\n            <EditCategoryButton data-id={id} onClick={() => setIsEditClicked(!isEditClicked)} />\n            </>\n    )\n\n    //handle new category form submit\n    function handleSubmit(e){\n        e.preventDefault()\n        \n        submitCategoryEdit({\n            id: id,\n            name: categoryName,\n            budget: parseInt(budgetValue)\n        })\n\n        setIsEditClicked(!isEditClicked)\n\n    }\n\n    // edit category form\n    const categoryEditForm = (\n            <form className=\"edit-category-form\" onSubmit={handleSubmit}>\n                <label> Name:</label>\n                <input\n                    name=\"name\"\n                    value={categoryName}\n                    onChange={(e) => setCategoryName(e.target.value)}\n                />\n                <label> Budget:</label>\n                <input \n                    name=\"budget\"\n                    value = {budgetValue}\n                    onChange={(e) => setBudgetValue(e.target.value)}\n                />\n                <button \n                    type=\"submit\">\n                        submit\n                </button>\n            </form>\n    )\n\n    return( \n        <>\n        {!isEditClicked ? \n            <CategoryCardDiv>\n                {categoryDataObj}\n            </CategoryCardDiv> : \n            <CategoryCardDiv>\n                {categoryEditForm}\n                <button onClick={()=> setIsEditClicked(!isEditClicked)}>Cancel</button>\n            </CategoryCardDiv> }\n        </>\n    )\n}\n\nconst CategoryCardDiv = styled.div`\n    border:1px #ccc solid;\n    width: 20%;\n    border-radius: 5px;\n    text-align:center;\n    background: #f5f5f5;\n    :hover {\n        transform: scale(1.05);\n        box-shadow: 2px 5px black;\n      }\n    `\n\nconst DeleteCategoryButton = styled(AiFillDelete)`\n    cursor: pointer;\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    width: 16px;\n    height: 16px;\n    padding: 0;\n    z-index: 10;\n`\n\n\nconst EditCategoryButton = styled(AiFillEdit)`\n    cursor: pointer;\n    z-index: 10;\n    width: 16px;\n    height: 16px;\n    padding: 0;\n    position: absolute;\n    top: 10px;\n    right: 30px;\n\n`\n\nexport default CategoryCard","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js",["127"],"import React, {useEffect, useState} from \"react\"\nimport { Bar } from 'react-chartjs-2';\nimport styled from \"styled-components\";\n\n\nfunction MonthComparisonChart({allMonths}){\n    const [chartData, setChartData] = useState({})\n\n\n    const allMonthsSorted = allMonths.sort((a, b) => a.id > b.id ? 1 : -1)\n\n    console.log(allMonthsSorted)\n    const monthlyBudget = allMonthsSorted.map(month=> month.budget)\n    //use below if want to sum up all category budgets\n    // const monthlyBudget = allMonthsSorted.map(month=> {\n    //     return month.categories.map(category => (category.budget))\n    //     .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    // })\n   \n    const monthlyActuals = allMonthsSorted.map(month=> {\n        return month.transactions.map(transaction => transaction.amount)\n        .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    })\n\n    \n    const monthNames = allMonths.map(month=> month.name)\n\n   \n    function chart(){\n        setChartData({\n            labels: monthNames,\n            datasets: [\n                {\n                    data: monthlyActuals,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#3cb371\",\"#3cb371\", \"#3cb371\", \"#3cb371\",\"#3cb371\",\"#3cb371\", \"#3cb371\", \"#3cb371\", \"#3cb371\", \"3cb371\"],\n                    borderColor: [\"#3cb371\"],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n  \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"Actual Spend ($)\"\n                },\n                {\n                    data: monthlyBudget,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#0f52ba\", \"#0f52ba\", \"#0f52ba\", \"#0f52ba\",\"#0f52ba\", \"#0f52ba\", \"#0f52ba\",\"#0f52ba\",\"#0f52ba\", \"#3cb371\", \"#0f52ba\", \"#0f52ba\", \"556b2f\"],\n                    borderColor: [\"#0f52ba\"],//,\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n             \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"Income ($)\"\n                }\n            ]\n        })\n    }\n\n    //scales stacks the chart, if I wanted bar graph made up of different categories\n    let chartOptions = {\n        responsive: true,\n        title: { text: \"Income vs. Actual Spending per Month\", \n                display:true, \n                fontSize: 38,\n                fontColor: \"#FFFFFF\"\n        },    \n        legend: {\n            position: 'left',\n            labels: {\n                fontSize: 18,\n                padding: 12,\n                fontColor: \"#FFFFFF\"\n            }\n        },\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero:true,\n                    fontColor: 'white'\n                },\n            }],\n          xAxes: [{\n                ticks: {\n                    fontColor: 'white'\n                },\n            }]\n        } ,\n        cutoutPercentage: 40,\n        animation: {\n            animateRotate: false,\n            animateScale: true\n          }\n    }\n\n    useEffect(() => {\n        chart()\n    }, [])\n\n\n    return( \n        <>\n        <BarChartDiv>\n            <Bar\n                data={chartData}\n                options={chartOptions}\n            />\n        </BarChartDiv>\n\n        </>\n    )\n}\n\nconst BarChartDiv = styled.div`\n    position: relative;\n    height:30vh; \n    width:60vw\n\n`\n\n\nexport default MonthComparisonChart;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js",["128","129"],"import React, {useState, useRef, useCallback} from 'react'\nimport styled from \"styled-components\";\nimport { MdClose } from 'react-icons/md';\nimport { useSpring, animated } from 'react-spring';\n\n\n\nfunction Modal({show, onClose, updateMonthBudget}){\n    const [newIncome, setNewIncome] = useState(\"\")\n\n    const animation = useSpring({\n        config: {\n          duration: 250\n        },\n        opacity: show ? 1 : 0,\n        transform: show ? `translateY(0%)` : `translateY(-100%)`\n      });\n\n\n    if (!show){\n        return null\n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        updateMonthBudget({budget: newIncome})\n        setNewIncome(\"\")\n        onClose()\n    }\n\n    return(\n        <>\n            <Background onClick={onClose} >\n            <animated.div style={animation}>\n                <ModalWrapper onClick={e => e.stopPropagation()} >\n                    <ModalContent>\n                        <h3 className=\"modal-title\">Enter new monthly income:</h3>\n                        <form onSubmit={handleSubmit} className=\"modal-new-form\">\n                            <input \n                                type=\"number\"\n                                name=\"amount\"\n                                value={newIncome}\n                                onChange={(e) => setNewIncome(e.target.value)}\n                            />\n                            <button  type=\"submit\" className=\"button-modal-close\">\n                                Submit\n                            </button>\n                            \n                        </form>\n                    </ModalContent>\n                    <CloseModalButton\n                        aria-label='Close modal'\n                         onClick={onClose}\n                    />\n                </ModalWrapper>\n                </animated.div>\n            </Background>\n        </>\n\n    )\n}\n\n\nexport default Modal\n\nconst Background = styled.div`\n    position: fixed;\n    left: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0,0,0,0.8);\n    display: flex;\n    align-items:center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n`\n\nconst ModalWrapper = styled.div`\n    width: 500px;\n    background-color: #bfbfbf;\n    height: 180px;\n    box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n    color: #000;\n    grid-template-columns: 1fr 1fr;\n    position: relative;\n    z-index: 10;\n    border-radius: 10px;\n    text-align: center;\n`\n//    display: grid;\n\n\nconst ModalContent = styled.div`\n     padding: 10px;\n     border-top: 1px solid #eee;\n     border-bottom: 1px solid #eee;\n     display: inline-block;\n     button {\n        padding: 10px 21px;\n        background: #141414;\n        color: #fff;\n        border: none;\n        margin-left: 5px;\n      }\n`\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\n  \n  ","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js",["130"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js",["131","132"],"import React from \"react\"\nimport styled from \"styled-components\"\n\nfunction ProgressBar({budget, totalSpent}){\n\n\nlet percentage = (totalSpent/budget)*100\n\nlet progressBarColor\nif (percentage > 100){\n     percentage = 100\n     progressBarColor = \"red\"\n} else if(percentage==0){\n    progressBarColor = \"rgb(165, 164, 187)\"\n}else if(percentage==100){\n    progressBarColor = \"#347c17\"\n}else if(percentage >= 90 && percentage < 100){\n    progressBarColor = \"rgb(203, 172, 48)\"\n\n}else {\n    progressBarColor = \"rgb(95, 142, 167)\"\n}\n\nconst myStyle ={\n    width: `${percentage}%`,\n    background: progressBarColor,\n    zIndex: 100\n}\n\n\n// console.log(myStyle)\n\nreturn(\n        <ProgressBarDiv >\n                <ProgressBarFillerDiv \n                    style={myStyle}>\n                </ProgressBarFillerDiv>\n         </ProgressBarDiv>\n)\n}\n\nconst ProgressBarDiv = styled.div`\n// position: relative;\n\nheight: 8px;\nborder-radius: 5px;\nwidth: 88%;\nmargin: 0 auto;\nbackground: rgb(165, 164, 187);\nborder:1px #ccc solid;\nz-index: 0;\n`\n\n\nconst ProgressBarFillerDiv = styled.div`\n    height: 100%;\n    border-radius: 5px;\n    transition: width .2s ease-in;\n`\nexport default ProgressBar","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js",["133","134"],"import React, {useEffect, useState, useMemo} from \"react\"\n// import ReactDOM from 'react-dom'\n// import CoinCard from \"./CoinCard\"\nimport styled from \"styled-components\";\nimport useColumns from \"./Columns\";\nimport CryptoTable from \"./CryptoTable\";\n\n\nfunction InvestmentMain(){\n\n    const [allCoins, setAllCoins] = useState({})\n    const [coinIndex, setCoinIndex] = useState(0)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [pageIndex, setPageIndex] = useState(0)\n    const columns = useColumns();\n\n    // console.log(columns)\n\n    //pull api data every xx amt of time\n    useEffect(() => {\n        apiCall()\n        const id = setInterval(apiCall, 100000);\n        return () => clearInterval(id);\n        }, [])\n\n    const apiCall = () => {\n        fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd`)\n        .then(response => response.json())\n        .then(data => {\n            setAllCoins(data)\n            setIsLoaded(true)})\n    }\n    \n    if (!isLoaded) return <h2>Loading...</h2>;\n\n    \n    const selectedCoins = allCoins.slice(coinIndex, coinIndex+10)\n    \n    // console.log(selectedCoins)\n\n\n    // const coinCardObj = selectedCoins.map((coin, index)=>{\n    //     return <CoinCard key={coin.current_price} coin={coin} order={pageIndex*10+index+1}/>\n    // })\n\n    function pageForward(){\n        setCoinIndex(coinIndex+10);\n         setPageIndex(pageIndex+1)\n    }\n\n    function pageBackward(){\n        setCoinIndex(coinIndex-10);\n         setPageIndex(pageIndex-1)\n    }\n\n\n    return(\n        <>\n        <InvestmentMainPageDiv>\n            <h1>Market Prices for Investments</h1>\n            <p>You may be thinking... now that you are spending more time at home, what additional investments could you put your money towards?</p>\n            {/* {coinCardObj} */}\n            <CryptoTable selectedCoins={selectedCoins} pageIndex={pageIndex} pageBackward={pageBackward} pageForward={pageForward}/>\n        </InvestmentMainPageDiv>\n        \n        \n       \n        <BottomDiv>**Data updated every 5 minutes <br/>\n            **All Data from CoinGecko</BottomDiv>\n        </>\n    )\n}\n\nexport default InvestmentMain;\n\nconst BottomDiv = styled.div`\nheight:25px;\npadding: 20px 0;\ntext-align:center;\n`\n\n\nconst InvestmentMainPageDiv = styled.div`\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\npadding: 10px;\n`\n\n","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js",[],["135","136"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js",["137","138","139"],"import React from \"react\";\nimport { useSortBy, useTable } from \"react-table\";\nimport useColumns from \"./Columns\";\nimport \"./Table.css\";\nimport { FaCaretSquareUp, FaCaretSquareDown } from \"react-icons/fa\";\nimport styled from 'styled-components';\n\nfunction CryptoTable({selectedCoins, pageIndex, pageBackward, pageForward}){\n    const columns = useColumns();\n    const data= selectedCoins\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n      } = useTable({ columns, data }, useSortBy);\n\n      function doNothing(e){\n      console.log(e.target)\n      }\n\n    return( \n        <>\n        <ChartTitle>Top 100 Cryptocurrencies by Market Cap*</ChartTitle>\n        <div className=\"container\">\n            <table {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                {column.render(\"Header\")}\n                                <span>\n                                    {column.isSorted ? (\n                                    column.isSortedDesc ? (\n                                        <FaCaretSquareDown />\n                                    ) : (\n                                        <FaCaretSquareUp />\n                                    )\n                                    ) : (\n                                    \"\"\n                                    )}\n                                </span>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        // console.log(row)\n                        return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                            return (\n                                <td {...cell.getCellProps()} >{cell.render(\"Cell\")}</td>\n                            );\n                            })}\n                        </tr>\n                        );\n                    })}\n                    </tbody>\n                </table>\n                </div>\n            <ChangePageDiv>      \n                {pageIndex==0 ? <div></div> : <button onClick={() => pageBackward()}>Previous Page</button>}\n                {pageIndex==9? null : <button onClick={() => pageForward()}>Next Page</button>}\n            </ChangePageDiv>  \n        </>\n    );\n    \n}\n\nconst ChartTitle = styled.h1`\n    text-align: center;\n`\n\nconst ChangePageDiv = styled.div`\ndisplay:flex;\nmargin: auto;\nwidth: 40%;\npadding: 10px;\njustify-content:space-between;\n`\n\n\nexport default CryptoTable","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js",["140"],"import React, { useState} from \"react\";\nimport {Link} from \"react-router-dom\";\n// import { LoginContext } from \"../../Login\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport {IconContext} from 'react-icons';\nimport {NavBarData} from './NavBarData';\nimport Logo from '../images/findexLargerLogo.png';\nimport './NavBar.css';\n\nfunction NavBar(){\n    // const {loggedIn, toggle} = useContext(LoginContext)\n    // const history = useHistory()\n    const [navBar, setNavBar] = useState(false)\n\n    const showNavBar = () => setNavBar(!navBar);\n    return (\n        <>\n        <IconContext.Provider value={{color:'fff'}}>\n            <div className=\"navBar\">\n                <Link to=\"#\" className='menu-bars'>\n                    <FaIcons.FaBars onClick={showNavBar}/> \n                </Link>\n                <Link exact to=\"/\">\n                    <img src={Logo} alt=\"top-image\" className=\"top-title\" width=\"200\" height = \"60\"/>\n                </Link>\n\n            </div>\n            <nav className={navBar ? \"nav-menu active\" : \"nav-menu\"}>\n                <ul className='nav-menu-items' onClick={showNavBar}>\n                    <li className=\"navBar-toggle\">\n                        <Link to='#' className='menu-bars'>\n                            <AiIcons.AiOutlineClose />\n                        </Link>\n                    </li>\n                    {NavBarData.map((item, index) => {\n                        return (\n                            <li key={index} className={item.cName}>\n                                <Link to={item.path}>\n                                    {item.icon}\n                                    <span>{item.title}</span>\n                                </Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n           \n            </nav>\n        </IconContext.Provider>\n\n        </>\n    )\n\n\n    // const headerLinksObj = () => {\n    //    return(\n    //    <>\n    //     <li>\n    //         <NavLink exact to=\"/budget\">\n    //             <strong>BUDGETS</strong>\n    //         </NavLink>\n    //     </li>\n    //     <li>\n    //         <NavLink exact to=\"/profile\">\n    //             <strong>PROFILE</strong>\n    //         </NavLink>\n    //     </li>\n    //     <li>\n    //         <NavLink exact to=\"/investments\">\n    //             <strong>INVESTMENTS</strong>\n    //         </NavLink>\n    //     </li>\n    //     </>)\n    // }\n\n    // return(\n    //     <nav className=\"nav-bar\"> \n    //     <ul>\n    //         <li>\n    //             <NavLink exact to=\"/\">\n    //                 <strong>HOME</strong>\n    //             </NavLink>\n    //         </li>\n            \n    //         {loggedIn ? headerLinksObj() : history.push(`/`)}         \n\n    //         <li className=\"login\" onClick={toggle}>\n    //             {loggedIn ? \"LOGOUT\" : \"LOGIN\"}\n    //         </li>\n            \n    //     </ul>\n        \n    //     </nav>\n    // )\n}\n\nexport default NavBar;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBarData.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":27,"column":9,"nodeType":"147","messageId":"148","endLine":30,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":37,"column":36,"nodeType":"151","messageId":"152","endLine":37,"endColumn":38},{"ruleId":"149","severity":1,"message":"153","line":22,"column":40,"nodeType":"151","messageId":"152","endLine":22,"endColumn":42},{"ruleId":"154","severity":1,"message":"155","line":41,"column":8,"nodeType":"156","endLine":41,"endColumn":27,"suggestions":"157"},{"ruleId":"149","severity":1,"message":"153","line":61,"column":63,"nodeType":"151","messageId":"152","endLine":61,"endColumn":65},{"ruleId":"145","severity":1,"message":"146","line":157,"column":5,"nodeType":"147","messageId":"148","endLine":160,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":20,"column":13,"nodeType":"160","messageId":"161","endLine":20,"endColumn":18},{"ruleId":"158","severity":1,"message":"162","line":24,"column":13,"nodeType":"160","messageId":"161","endLine":24,"endColumn":18},{"ruleId":"154","severity":1,"message":"155","line":113,"column":8,"nodeType":"156","endLine":113,"endColumn":10,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"164","line":1,"column":26,"nodeType":"160","messageId":"161","endLine":1,"endColumn":32},{"ruleId":"158","severity":1,"message":"165","line":1,"column":34,"nodeType":"160","messageId":"161","endLine":1,"endColumn":45},{"ruleId":"158","severity":1,"message":"166","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":16},{"ruleId":"149","severity":1,"message":"153","line":13,"column":21,"nodeType":"151","messageId":"152","endLine":13,"endColumn":23},{"ruleId":"149","severity":1,"message":"153","line":15,"column":20,"nodeType":"151","messageId":"152","endLine":15,"endColumn":22},{"ruleId":"158","severity":1,"message":"167","line":1,"column":37,"nodeType":"160","messageId":"161","endLine":1,"endColumn":44},{"ruleId":"158","severity":1,"message":"168","line":15,"column":11,"nodeType":"160","messageId":"161","endLine":15,"endColumn":18},{"ruleId":"141","replacedBy":"169"},{"ruleId":"143","replacedBy":"170"},{"ruleId":"158","severity":1,"message":"171","line":20,"column":16,"nodeType":"160","messageId":"161","endLine":20,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":69,"column":27,"nodeType":"151","messageId":"152","endLine":69,"endColumn":29},{"ruleId":"149","severity":1,"message":"153","line":70,"column":27,"nodeType":"151","messageId":"152","endLine":70,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":25,"column":21,"nodeType":"174","endLine":25,"endColumn":102},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["177"],"no-unused-vars","'data1' is assigned a value but never used.","Identifier","unusedVar","'data2' is assigned a value but never used.",["178"],"'useRef' is defined but never used.","'useCallback' is defined but never used.","'ReactDOM' is defined but never used.","'useMemo' is defined but never used.","'columns' is assigned a value but never used.",["175"],["176"],"'doNothing' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [chart, selectedMonthData]",{"range":"183","text":"184"},"Update the dependencies array to be: [chart]",{"range":"185","text":"186"},[1524,1543],"[chart, selectedMonthData]",[3946,3948],"[chart]"]