[{"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js":"1","/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js":"2","/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js":"3","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js":"4","/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js":"5","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js":"6","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js":"7","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js":"8","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js":"9","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js":"10","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js":"11","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js":"12","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js":"13","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js":"14","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js":"15","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js":"16","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js":"17","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js":"18","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js":"19","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js":"20","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js":"21","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js":"22","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js":"23","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js":"24","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js":"25","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBarData.js":"26","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentDetail.js":"27"},{"size":587,"mtime":1612380312485,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1612378419870,"results":"30","hashOfConfig":"29"},{"size":420,"mtime":1613588781680,"results":"31","hashOfConfig":"29"},{"size":684,"mtime":1615910281911,"results":"32","hashOfConfig":"29"},{"size":1042,"mtime":1615409676582,"results":"33","hashOfConfig":"29"},{"size":2320,"mtime":1615904928720,"results":"34","hashOfConfig":"29"},{"size":2463,"mtime":1613667171720,"results":"35","hashOfConfig":"29"},{"size":1161,"mtime":1615903574006,"results":"36","hashOfConfig":"29"},{"size":462,"mtime":1615905282057,"results":"37","hashOfConfig":"29"},{"size":872,"mtime":1613586491570,"results":"38","hashOfConfig":"29"},{"size":2351,"mtime":1615911925749,"results":"39","hashOfConfig":"29"},{"size":3051,"mtime":1613702755517,"results":"40","hashOfConfig":"29"},{"size":10284,"mtime":1617139457538,"results":"41","hashOfConfig":"29"},{"size":3338,"mtime":1615903675237,"results":"42","hashOfConfig":"29"},{"size":4277,"mtime":1615907163710,"results":"43","hashOfConfig":"29"},{"size":2929,"mtime":1615903646428,"results":"44","hashOfConfig":"29"},{"size":564,"mtime":1613595174787,"results":"45","hashOfConfig":"29"},{"size":5863,"mtime":1613702410100,"results":"46","hashOfConfig":"29"},{"size":2649,"mtime":1616078885839,"results":"47","hashOfConfig":"29"},{"size":1192,"mtime":1615903839627,"results":"48","hashOfConfig":"29"},{"size":3047,"mtime":1617231113734,"results":"49","hashOfConfig":"29"},{"size":1363,"mtime":1615905521784,"results":"50","hashOfConfig":"29"},{"size":1326,"mtime":1615904280802,"results":"51","hashOfConfig":"29"},{"size":3325,"mtime":1615904133302,"results":"52","hashOfConfig":"29"},{"size":1950,"mtime":1615904256711,"results":"53","hashOfConfig":"29"},{"size":714,"mtime":1613448757896,"results":"54","hashOfConfig":"29"},{"size":896,"mtime":1616782776519,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"7dmnfc",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js",[],["115","116"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js",["117"],"import React, { useState, useEffect } from 'react';\nimport {  Doughnut } from \"react-chartjs-2\";\n\n\n\nfunction MonthGraph({selectedMonthData}){\n    const [chartData, setChartData] = useState({})\n    \n    const categoryLabels = selectedMonthData.categories.map(data => data.name)\n    const categoryData = selectedMonthData.categories.map(data => data.budget)\n\n    function chart(){\n        setChartData({\n            labels: categoryLabels,\n            datasets: [\n                {\n                    data: categoryData,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                }\n            ]\n        })\n    }\n\n    useEffect(() => {\n        \n\n        chart()\n    }, [selectedMonthData])\n\n    let chartOptions = {\n        responsive: true,\n        title: { text: \"Budget Broken Down into Categories\", \n                display:true, \n                fontSize: 30,\n                fontColor: \"#FFFFFF\"\n        },    \n        legend: {\n            position: 'left',\n            labels: {\n                fontSize: 18,\n                padding: 12,\n                fontColor: \"#FFFFFF\"\n            }\n        },\n        cutoutPercentage: 40,\n        animation: {\n            animateRotate: false,\n            animateScale: true\n          }\n    \n        \n    }\n\n\n    return(\n        <div className=\"doughnut-chart\">\n            <Doughnut\n                data={chartData} \n                options={chartOptions} \n            />\n            \n        </div>\n    );\n}\n\n\nexport default MonthGraph","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js",["118"],"import React, {useEffect, useState} from \"react\"\nimport { Bar } from 'react-chartjs-2';\nimport styled from \"styled-components\";\n\n\nfunction MonthComparisonChart({allMonths}){\n    const [chartData, setChartData] = useState({})\n\n\n    const allMonthsSorted = allMonths.sort((a, b) => a.id > b.id ? 1 : -1)\n\n    console.log(allMonthsSorted)\n    const monthlyBudget = allMonthsSorted.map(month=> month.budget)\n    //use below if want to sum up all category budgets\n    // const monthlyBudget = allMonthsSorted.map(month=> {\n    //     return month.categories.map(category => (category.budget))\n    //     .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    // })\n   \n    const monthlyActuals = allMonthsSorted.map(month=> {\n        return month.transactions.map(transaction => transaction.amount)\n        .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    })\n\n    \n    const monthNames = allMonths.map(month=> month.name)\n\n   \n    function chart(){\n        setChartData({\n            labels: monthNames,\n            datasets: [\n                {\n                    data: monthlyActuals,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#3cb371\",\"#3cb371\", \"#3cb371\", \"#3cb371\",\"#3cb371\",\"#3cb371\", \"#3cb371\", \"#3cb371\", \"#3cb371\", \"3cb371\"],\n                    borderColor: [\"#3cb371\"],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n  \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"Actual Spend ($)\"\n                },\n                {\n                    data: monthlyBudget,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#0f52ba\", \"#0f52ba\", \"#0f52ba\", \"#0f52ba\",\"#0f52ba\", \"#0f52ba\", \"#0f52ba\",\"#0f52ba\",\"#0f52ba\", \"#3cb371\", \"#0f52ba\", \"#0f52ba\", \"556b2f\"],\n                    borderColor: [\"#0f52ba\"],//,\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n             \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"Income ($)\"\n                }\n            ]\n        })\n    }\n\n    //scales stacks the chart, if I wanted bar graph made up of different categories\n    let chartOptions = {\n        responsive: true,\n        title: { text: \"Income vs. Actual Spending per Month\", \n                display:true, \n                fontSize: 38,\n                fontColor: \"#FFFFFF\"\n        },    \n        legend: {\n            position: 'left',\n            labels: {\n                fontSize: 18,\n                padding: 12,\n                fontColor: \"#FFFFFF\"\n            }\n        },\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero:true,\n                    fontColor: 'white'\n                },\n            }],\n          xAxes: [{\n                ticks: {\n                    fontColor: 'white'\n                },\n            }]\n        } ,\n        cutoutPercentage: 40,\n        animation: {\n            animateRotate: false,\n            animateScale: true\n          }\n    }\n\n    useEffect(() => {\n        chart()\n    }, [])\n\n\n    return( \n        <>\n        <BarChartDiv>\n            <Bar\n                data={chartData}\n                options={chartOptions}\n            />\n        </BarChartDiv>\n\n        </>\n    )\n}\n\nconst BarChartDiv = styled.div`\n    position: relative;\n    height:30vh; \n    width:60vw\n\n`\n\n\nexport default MonthComparisonChart;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js",["119"],"import React, {useRef, useEffect, useState} from 'react'\nimport styled from \"styled-components\";\n\n\n\n\nfunction CoinCard({coin, order}){\n    const [color, setColor] = useState(\"black\")\n    const prevPriceRef = useRef(coin.current_price)\n\n    //to change the price of the text upon price change-- current api pulls every 5 min\n    useEffect(() => {\n        // use the current value of the ref\n        const prevPrice = prevPriceRef.current;\n    \n        if (coin.current_price > prevPrice) {\n          setColor(\"green\");\n        } else if (coin.current_price < prevPrice) {\n          setColor(\"red\");\n        } else {\n          setColor(\"black\");\n        }\n        // set the new value of the ref (note: this doesn't trigger a re-render)\n        prevPriceRef.current = coin.current_price;\n      }, [coin.current_price]);\n\n    return(\n        <CoinCardDiv>\n            <h2>#{order}. {coin.name}</h2>\n            <img \n              src={coin.image} \n              alt=\"coin image\"\n              width=\"50\"\n              height=\"50\"></img>\n            <h3>{coin.symbol}</h3>\n            <p style={{color: color}}>${coin.current_price}</p>\n        </CoinCardDiv>\n    )\n}\n\n\nexport default CoinCard\n\n\nconst CoinCardDiv = styled.div`\nborder:1px #ccc solid;\nwidth: 50%;\nmargin: 0 auto;\n\n\n`\n",["120","121"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBarData.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentDetail.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":43,"column":8,"nodeType":"128","endLine":43,"endColumn":27,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"127","line":113,"column":8,"nodeType":"128","endLine":113,"endColumn":10,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":30,"column":13,"nodeType":"133","endLine":34,"endColumn":27},{"ruleId":"122","replacedBy":"134"},{"ruleId":"124","replacedBy":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["138"],["139"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["136"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [chart, selectedMonthData]",{"range":"144","text":"145"},"Update the dependencies array to be: [chart]",{"range":"146","text":"147"},[1534,1553],"[chart, selectedMonthData]",[3946,3948],"[chart]"]