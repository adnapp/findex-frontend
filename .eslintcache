[{"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js":"1","/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js":"2","/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js":"3","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js":"4","/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js":"5","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js":"6","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js":"7","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js":"8","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js":"9","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js":"10","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js":"11","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js":"12","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js":"13","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js":"14","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js":"15","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js":"16","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js":"17","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js":"18","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js":"19","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js":"20","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js":"21","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js":"22","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js":"23","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js":"24","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js":"25"},{"size":587,"mtime":1612380312485,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1612378419870,"results":"28","hashOfConfig":"27"},{"size":422,"mtime":1613419342668,"results":"29","hashOfConfig":"27"},{"size":116,"mtime":1612379400993,"results":"30","hashOfConfig":"27"},{"size":824,"mtime":1613405654141,"results":"31","hashOfConfig":"27"},{"size":696,"mtime":1612880419540,"results":"32","hashOfConfig":"27"},{"size":2298,"mtime":1613405654130,"results":"33","hashOfConfig":"27"},{"size":1114,"mtime":1612984801279,"results":"34","hashOfConfig":"27"},{"size":493,"mtime":1612979101007,"results":"35","hashOfConfig":"27"},{"size":578,"mtime":1612818899649,"results":"36","hashOfConfig":"27"},{"size":2266,"mtime":1613405654134,"results":"37","hashOfConfig":"27"},{"size":2601,"mtime":1613408131063,"results":"38","hashOfConfig":"27"},{"size":9232,"mtime":1613408085353,"results":"39","hashOfConfig":"27"},{"size":3026,"mtime":1613405654132,"results":"40","hashOfConfig":"27"},{"size":3565,"mtime":1613405654141,"results":"41","hashOfConfig":"27"},{"size":1689,"mtime":1612904517808,"results":"42","hashOfConfig":"27"},{"size":561,"mtime":1612905207248,"results":"43","hashOfConfig":"27"},{"size":4150,"mtime":1612985784855,"results":"44","hashOfConfig":"27"},{"size":1499,"mtime":1613405654137,"results":"45","hashOfConfig":"27"},{"size":815,"mtime":1613405654135,"results":"46","hashOfConfig":"27"},{"size":2113,"mtime":1613405654139,"results":"47","hashOfConfig":"27"},{"size":1140,"mtime":1613405654137,"results":"48","hashOfConfig":"27"},{"size":1114,"mtime":1613405654138,"results":"49","hashOfConfig":"27"},{"size":2339,"mtime":1613405654139,"results":"50","hashOfConfig":"27"},{"size":1231,"mtime":1613419301609,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"7dmnfc",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/anapoletano/Flatiron/code/Mod5/findex/src/index.js",[],["112","113"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/reportWebVitals.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/App.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Footer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/MainContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/Profile.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionList.js",["114"],"import React, {useState} from 'react'\nimport Search from './Search'\nimport TransactionCard from './TransactionCard'\n\n\nfunction TransactionList({transactions, handleRemoveTransaction, categoriesList}){\n\n    const [selectedCategory, setSelectedCategory] = useState(\"all\")\n\n\n    // console.log(selectedCategory)\n\n    function handleChange(value){\n        setSelectedCategory(value)\n    }\n\n    const filteredTransactions = transactions.filter(transaction =>{\n        if (selectedCategory === \"all\"){\n            return transaction \n        }\n        return transaction.category_id == selectedCategory\n    })\n\n    const transactionsObj = filteredTransactions.map((transaction=> {\n        return <TransactionCard key={transaction.id} transaction={transaction} handleRemoveTransaction={handleRemoveTransaction}/>\n    }))\n\n    return( \n        <>\n        <div className=\"transaction-list-div\">\n            <h3>Transactions:</h3>\n            <Search categoriesList={categoriesList} handleChange={handleChange}/>\n            {transactionsObj}\n            \n\n        </div>\n        </>\n    )\n}\n\n\nexport default TransactionList","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/Search.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BottomHalfBudgetPage/TransactionCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/MonthGraph.js",["115"],"import React, { useState, useEffect } from 'react';\nimport {  Doughnut } from \"react-chartjs-2\";\n\n\n\nfunction MonthGraph({selectedMonthData}){\n    const [chartData, setChartData] = useState({})\n    \n    const categoryLabels = selectedMonthData.categories.map(data => data.name)\n    const categoryData = selectedMonthData.categories.map(data => data.budget)\n\n    function chart(){\n        setChartData({\n            labels: categoryLabels,\n            datasets: [\n                {\n                    data: categoryData,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                }\n            ]\n        })\n    }\n\n    useEffect(() => {\n        chart()\n    }, [selectedMonthData])\n\n    let chartOptions = {\n        responsive: true,\n        title: { text: \"Budget Broken Down into Categories\", \n                display:true, \n                fontSize: 30 \n        },    \n        legend: {\n            position: 'left',\n            labels: {\n                fontSize: 18,\n                padding: 12\n            }\n        },\n        cutoutPercentage: 40,\n        animation: {\n            animateRotate: false,\n            animateScale: true\n          }\n    \n        \n    }\n\n\n    return(\n        <div className=\"doughnut-chart\">\n            <Doughnut\n                data={chartData} \n                options={chartOptions} \n            />\n            \n        </div>\n    );\n}\n\n\nexport default MonthGraph","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryContainer.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/BudgetPage.js",["116","117","118"],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/CategoryCard.js",["119","120"],"import React, {useState} from 'react'\nimport ProgressBar from './ProgressBar';\nimport styled from \"styled-components\";\n\n\nfunction CategoryCard({category, handleRemoveCategory, submitCategoryEdit}){\n    const [isEditClicked, setIsEditClicked] = useState(false)\n    const {name, budget, id} = category;\n    const [categoryName, setCategoryName] = useState(name)\n    const [budgetValue, setBudgetValue] = useState(budget)\n\n    // console.log(category)\n\n    const totalSpent = category.transactions.map(transaction => {\n        return transaction.amount\n    }).reduce(( accumulator, currentValue ) => accumulator + currentValue,\n        0\n      ).toFixed(2)\n\n      const data1 = [\n          {spending: 1, spent: totalSpent}\n      ]\n\n      const data2 = [\n        {\"budgeted\": 1, spent: budget}\n    ]\n\n    // console.log(isEditClicked)\n    const categoryDataObj = (\n        <>\n        \n            <h3>{name}</h3>\n            <ProgressBar budget={budget} totalSpent={totalSpent}/>\n            <h5>Budget: {budget}</h5>\n            <h5>Total Spent: {totalSpent}</h5>\n            <button\n                className=\"delete-category-btn\" \n                data-id={id}\n                onClick={() => handleRemoveCategory(id)}\n            >🗑</button>\n            <button\n                className=\"edit-category-btn\" \n                data-id={id}\n                onClick={() => setIsEditClicked(!isEditClicked)}            \n            >✏️</button>\n            </>\n    )\n\n    //handle new category form submit\n    function handleSubmit(e){\n        e.preventDefault()\n        \n        submitCategoryEdit({\n            id: id,\n            name: categoryName,\n            budget: parseInt(budgetValue)\n        })\n\n        setIsEditClicked(!isEditClicked)\n\n    }\n\n    // edit category form\n    const categoryEditForm = (\n            <form className=\"edit-category-form\" onSubmit={handleSubmit}>\n                <label> Name:</label>\n                <input\n                    name=\"name\"\n                    value={categoryName}\n                    onChange={(e) => setCategoryName(e.target.value)}\n                />\n                <label> Budget:</label>\n                <input \n                    name=\"budget\"\n                    value = {budgetValue}\n                    onChange={(e) => setBudgetValue(e.target.value)}\n                />\n                <button \n                    type=\"submit\">\n                        submit\n                </button>\n            </form>\n    )\n\n    return( \n        <>\n        {!isEditClicked ? \n            <CategoryCardDiv>\n                {categoryDataObj}\n            </CategoryCardDiv> : \n            <CategoryCardDiv>\n                {categoryEditForm}\n                <button onClick={()=> setIsEditClicked(!isEditClicked)}>Cancel</button>\n            </CategoryCardDiv> }\n        </>\n    )\n}\n\nconst CategoryCardDiv = styled.div`\n    border:1px #ccc solid;\n    width: 20%;\n    align-content: space-around;\n    margin-top: 10;\n    border-radius: 5px;\n`;\n\n\nexport default CategoryCard","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/ProfileRelated/MonthComparisonChart.js",["121"],"import React, {useEffect, useState} from \"react\"\nimport { Bar } from 'react-chartjs-2';\n\n\nfunction MonthComparisonChart({allMonths}){\n    const [chartData, setChartData] = useState({})\n\n    // console.log(allMonths)\n\n\n    const monthlyBudget = allMonths.map(month=> {\n        return month.categories.map(category => (category.budget))\n        .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    })\n    \n    // console.log(\"budget\",monthlyBudget)\n\n    const monthlyActuals = allMonths.map(month=> {\n        return month.transactions.map(transaction => transaction.amount)\n        .reduce(( accumulator, currentValue ) => accumulator + currentValue,0)\n    })\n\n    // console.log(\"Actuals\", monthlyActuals)\n    \n    const monthNames = allMonths.map(month=> month.name)\n\n    // console.log(monthNames)\n\n\n    //chart\n\n\n    function chart(){\n        setChartData({\n            labels: monthNames,\n            datasets: [\n                {\n                    data: monthlyActuals,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#9acd32\",\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n  \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"actuals\"\n                },\n                {\n                    data: monthlyBudget,\n                    lineTension: 0.1,\n                    backgroundColor: [\"#0f52ba\", \"#0f52ba\", \"#0f52ba\", \"#0f52ba\"],//,\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\", \"#bdffbe\", \"#808000\", \"556b2f\"],\n                    borderColor: [\"#0f52ba\"],//,\"#006400\", \"#228b22\", \"#3cb371\",\"#00fa9a\",\"#98fb98\", \"#3cb371\",  \"#bdffbe\", \"#808000\",\"556b2f\" ],\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n             \n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    label: \"budget\"\n                }\n            ]\n        })\n    }\n\n    //scales stacks the chart, if I wanted bar graph made up of different categories\n    let chartOptions = {\n        // scales: {\n        //     xAxes: [{\n        //         stacked: true\n        //     }],\n        //     yAxes: [{\n        //         stacked: true\n        //     }]\n        // }\n    }\n\n\n\n    useEffect(() => {\n        chart()\n    }, [])\n\n\n\n\n    return( \n        <>\n        <h3>MonthComparisonChart</h3>\n        <div className=\"monthly-comparison-chart-div\">\n            <Bar\n                data={chartData}\n                options={chartOptions}\n            />\n        </div>\n\n        </>\n    )\n}\n\n\nexport default MonthComparisonChart;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/MonthlyIncomeModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Login.js",["122"],"import {createContext, useState} from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n//global state: loggedIn?\n\n//create context obj\nconst LoginContext = createContext();\n\n//context provider component\nfunction LoginProvider({children}){\n    const [loggedIn, setLoggedIn] = useState(false)\n\n\n    function toggle(){\n        setLoggedIn(loggedIn => !loggedIn)\n    }\n\n\n    const value = {loggedIn: loggedIn, toggle: toggle}\n\n    return (\n        <LoginContext.Provider value={value}>{children}</LoginContext.Provider>\n    );\n}\n\nexport {LoginContext, LoginProvider};\n ","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/Modal/CreateNewMonthModal.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/HomePage/Home.js",["123"],"import React from \"react\"\nimport ReactDOM from 'react-dom'\n// import { \n//     VictoryBar, \n//     VictoryChart, \n//     VictoryGroup, \n//     VictoryLegend } from 'victory';\n\nfunction Home(){\n\n\n    \n\n\n    // const data = [\n    //     {quarter: 1, budget: 13000},\n     \n    //   ];\n\n    // const data2 = [\n    //     {quarter: 1, expense: 20000},\n     \n    //   ];\n\n\n\n\n\n    return(\n        <div>\n        <h1> this is Home</h1>\n\n\n\n\n\n\n\n\n\n{/*         \n        <VictoryChart\n            domainPadding={20}\n            // theme={VictoryTheme.greyscale}\n            >\n            <VictoryLegend x={125} y={50}\n                gutter={30}\n                style={{ border: { stroke: \"black\" }, title: {fontSize: 20 } }}\n                orientation=\"horizontal\"\n\n                data={[\n                    { name: \"Budget\" }, { name: \"Total Expenses\" }\n                  ]}\n                />\n            <VictoryGroup\n            offset={10}\n            >            \n\n                <VictoryBar \n                     color='#0080ff'\n                    animate={{ duration: 1000 }}\n                    data={data}\n                    x=\"quarter\"\n                    y=\"budget\"\n                    />\n                 <VictoryBar\n                    animate={{ duration: 1000 }}\n                    data={data2}\n                    x=\"quarter\"\n                    y=\"expense\"\n                    />\n                </VictoryGroup> \n        </VictoryChart> */}\n\n        </div>\n    )\n}\n\nexport default Home;","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/BudgetRelated/TopHalfBudgetPage/ProgressBar.js",["124","125"],"import React from \"react\"\n\n\nfunction ProgressBar({budget, totalSpent}){\n\n\nlet percentage = (totalSpent/budget)*100\n\nlet progressBarColor\nif (percentage > 100){\n     percentage = 100\n     progressBarColor = \"red\"\n} else if(percentage==0){\n    progressBarColor = \"rgb(165, 164, 187)\"\n}else if(percentage==100){\n    progressBarColor = \"#347c17\"\n}else if(percentage >= 90 && percentage < 100){\n    progressBarColor = \"rgb(203, 172, 48)\"\n\n}else {\n    progressBarColor = \"rgb(95, 142, 167)\"\n}\n\nconst myStyle ={\n    width: `${percentage}%`,\n    background: progressBarColor,\n    zIndex: 3,\n}\n\n\n\nreturn(\n        <div className=\"progress-bar\" >\n                <div \n                    className=\"progress-filler\" \n                    style={myStyle}>\n\n                </div>\n\n        </div>\n)\n}\n\nexport default ProgressBar","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/InvestmentMain.js",["126","127","128","129","130"],"import React, {useEffect, useState, useMemo} from \"react\"\nimport ReactDOM from 'react-dom'\nimport CoinCard from \"./CoinCard\"\nimport styled from \"styled-components\";\nimport useColumns from \"./Columns\";\nimport CryptoTable from \"./CryptoTable\";\n\n\nfunction InvestmentMain(){\n\n    const [allCoins, setAllCoins] = useState({})\n    const [coinIndex, setCoinIndex] = useState(0)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const [pageIndex, setPageIndex] = useState(0)\n    const columns = useColumns();\n\n    console.log(columns)\n\n    //pull api data every xx amt of time\n    useEffect(() => {\n        apiCall()\n        const id = setInterval(apiCall, 100000);\n        return () => clearInterval(id);\n        }, [])\n\n    const apiCall = () => {\n        fetch(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd`)\n        .then(response => response.json())\n        .then(data => {\n            setAllCoins(data)\n            setIsLoaded(true)})\n    }\n    \n    if (!isLoaded) return <h2>Loading...</h2>;\n\n    \n    const selectedCoins = allCoins.slice(coinIndex, coinIndex+10)\n    \n    console.log(selectedCoins)\n\n\n    // const coinCardObj = selectedCoins.map((coin, index)=>{\n    //     return <CoinCard key={coin.current_price} coin={coin} order={pageIndex*10+index+1}/>\n    // })\n\n    function pageForward(){\n        setCoinIndex(coinIndex+10);\n         setPageIndex(pageIndex+1)\n    }\n\n    function pageBackward(){\n        setCoinIndex(coinIndex-10);\n         setPageIndex(pageIndex-1)\n    }\n\n    console.log(pageIndex)\n\n    return(\n        <>\n        <div className=\"crypto-cards-div\">\n            <h1>investment page</h1>\n            {/* {coinCardObj} */}\n            <CryptoTable selectedCoins={selectedCoins}/>\n        </div>\n        {pageIndex==0 ? null : <button onClick={() => pageBackward()}>Previous Page</button>}\n        {pageIndex==9? null : <button onClick={() => pageForward()}>Next Page</button>}\n       \n        <BottomDiv>**Data updated every 5 minutes</BottomDiv>\n        </>\n    )\n}\n\nexport default InvestmentMain;\n\nconst BottomDiv = styled.div`\nheight:25px;\npadding: 20px 0;\n\n`\n\n","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CoinCard.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/Columns.js",[],"/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/InvestmentRelated/CryptoTable.js",["131"],"import React from \"react\";\nimport { useSortBy, useTable } from \"react-table\";\nimport useColumns from \"./Columns\";\nimport \"./Table.css\";\nimport { FaCaretSquareUp, FaCaretSquareDown } from \"react-icons/fa\";\n\nfunction CryptoTable({selectedCoins}){\n    const columns = useColumns();\n    const data= selectedCoins\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow\n      } = useTable({ columns, data }, useSortBy);\n\n      function doNothing(e){\n      console.log(e.target)\n      }\n\n    return( \n        <div className=\"container\">\n            <table {...getTableProps()}>\n                <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                {column.render(\"Header\")}\n                                <span>\n                                    {column.isSorted ? (\n                                    column.isSortedDesc ? (\n                                        <FaCaretSquareDown />\n                                    ) : (\n                                        <FaCaretSquareUp />\n                                    )\n                                    ) : (\n                                    \"\"\n                                    )}\n                                </span>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {rows.map(row => {\n                        prepareRow(row);\n                        console.log(row)\n                        return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                            return (\n                                <td {...cell.getCellProps()} >{cell.render(\"Cell\")}</td>\n                            );\n                            })}\n                        </tr>\n                        );\n                    })}\n                    </tbody>\n                </table>\n                </div>\n            );\n    \n}\n\n\nexport default CryptoTable","/Users/anapoletano/Flatiron/code/Mod5/findex/src/Components/NavBar/NavBar.js",["132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":21,"column":40,"nodeType":"139","messageId":"140","endLine":21,"endColumn":42},{"ruleId":"141","severity":1,"message":"142","line":41,"column":8,"nodeType":"143","endLine":41,"endColumn":27,"suggestions":"144"},{"ruleId":"137","severity":1,"message":"138","line":57,"column":63,"nodeType":"139","messageId":"140","endLine":57,"endColumn":65},{"ruleId":"145","severity":1,"message":"146","line":139,"column":5,"nodeType":"147","messageId":"148","endLine":142,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":185,"column":83,"nodeType":"139","messageId":"140","endLine":185,"endColumn":85},{"ruleId":"149","severity":1,"message":"150","line":20,"column":13,"nodeType":"151","messageId":"152","endLine":20,"endColumn":18},{"ruleId":"149","severity":1,"message":"153","line":24,"column":13,"nodeType":"151","messageId":"152","endLine":24,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":95,"column":8,"nodeType":"143","endLine":95,"endColumn":10,"suggestions":"154"},{"ruleId":"149","severity":1,"message":"155","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":16},{"ruleId":"149","severity":1,"message":"155","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":13,"column":21,"nodeType":"139","messageId":"140","endLine":13,"endColumn":23},{"ruleId":"137","severity":1,"message":"138","line":15,"column":20,"nodeType":"139","messageId":"140","endLine":15,"endColumn":22},{"ruleId":"149","severity":1,"message":"156","line":1,"column":37,"nodeType":"151","messageId":"152","endLine":1,"endColumn":44},{"ruleId":"149","severity":1,"message":"155","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":16},{"ruleId":"149","severity":1,"message":"157","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":65,"column":19,"nodeType":"139","messageId":"140","endLine":65,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":66,"column":19,"nodeType":"139","messageId":"140","endLine":66,"endColumn":21},{"ruleId":"149","severity":1,"message":"158","line":19,"column":16,"nodeType":"151","messageId":"152","endLine":19,"endColumn":25},{"ruleId":"149","severity":1,"message":"159","line":1,"column":28,"nodeType":"151","messageId":"152","endLine":1,"endColumn":36},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["162"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'data1' is assigned a value but never used.","Identifier","unusedVar","'data2' is assigned a value but never used.",["163"],"'ReactDOM' is defined but never used.","'useMemo' is defined but never used.","'CoinCard' is defined but never used.","'doNothing' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [chart, selectedMonthData]",{"range":"168","text":"169"},"Update the dependencies array to be: [chart]",{"range":"170","text":"171"},[1524,1543],"[chart, selectedMonthData]",[3262,3264],"[chart]"]